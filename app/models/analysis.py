"""
Analysis result data models.
Defines the structure for attack path analysis responses.
"""
from typing import Optional
from pydantic import BaseModel, Field


class AttackPathResponse(BaseModel):
    """Response model for attack path generation."""
    
    attack_path: list[str] = Field(
        ...,
        description="Step-by-step attack path sequence generated by AI"
    )
    generated_prompt: Optional[str] = Field(
        None,
        description="The dynamic prompt generated for this specific request (for debugging/auditing)"
    )
    prompt_sections: Optional[int] = Field(
        None,
        description="Number of dynamic sections included in the prompt"
    )
    
    class Config:
        json_schema_extra = {
            "example": {
                "attack_path": [
                    "Reconnaissance: Active network scanning using nmap (MITRE T1595.002) identifies Linux host with SSH (22), HTTP (80), HTTPS (443), MySQL (3306)",
                    "Weaponization: Prepare SQL injection exploit for CVE-2023-12345 targeting Apache/MySQL stack",
                    "Delivery: Direct exploitation via HTTP POST to vulnerable endpoint (MITRE T1190)",
                    "Exploitation: SQL injection successful - extracting database credentials using UNION-based technique",
                    "Installation: Establish persistence via cron job backdoor on Linux system (MITRE T1053.003)",
                    "Command and Control: Setup reverse shell over HTTPS using Metasploit (MITRE T1071.001)",
                    "Actions on Objectives: Credential dumping, lateral movement via SSH, data exfiltration (MITRE T1003, T1021.004, T1048)"
                ]
            }
        }
